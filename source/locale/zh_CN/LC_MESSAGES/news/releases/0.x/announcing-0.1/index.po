# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:2
msgid "announcing-0.1"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:4
msgid ""
"Google, IBM, and Lyft are proud to announce the first public release of "
"`Istio </>`_: an open source project that provides a uniform way to "
"connect, secure, manage and monitor microservices. Our current release is"
" targeted at the `Kubernetes <https://kubernetes.io/>`_ environment; we "
"intend to add support for other environments such as virtual machines and"
" Cloud Foundry in the coming months. Istio adds traffic management to "
"microservices and creates a basis for value-add capabilities like "
"security, monitoring, routing, connectivity management and policy. The "
"software is built using the battle-tested `Envoy "
"<https://envoyproxy.github.io/envoy/>`_ proxy from Lyft, and gives "
"visibility and control over traffic *without requiring any changes to "
"application code*. Istio gives CIOs a powerful tool to enforce security, "
"policy and compliance requirements across the enterprise."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:19
msgid "Background"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:21
msgid ""
"Writing reliable, loosely coupled, production-grade applications based on"
" microservices can be challenging. As monolithic applications are "
"decomposed into microservices, software teams have to worry about the "
"challenges inherent in integrating services in distributed systems: they "
"must account for service discovery, load balancing, fault tolerance, end-"
"to-end monitoring, dynamic routing for feature experimentation, and "
"perhaps most important of all, compliance and security."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:29
msgid ""
"Inconsistent attempts at solving these challenges, cobbled together from "
"libraries, scripts and Stack Overflow snippets leads to solutions that "
"vary wildly across languages and runtimes, have poor observability "
"characteristics and can often end up compromising security."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:34
msgid ""
"One solution is to standardize implementations on a common RPC library "
"like `gRPC <https://grpc.io>`_, but this can be costly for organizations "
"to adopt wholesale and leaves out brownfield applications which may be "
"practically impossible to change. Operators need a flexible toolkit to "
"make their microservices secure, compliant, trackable and highly "
"available, and developers need the ability to experiment with different "
"features in production, or deploy canary releases, without impacting the "
"system as a whole."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:44
msgid "Solution: service mesh"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:46
msgid ""
"Imagine if we could transparently inject a layer of infrastructure "
"between a service and the network that gives operators the controls they "
"need while freeing developers from having to bake solutions to "
"distributed system problems into their code. This uniform layer of "
"infrastructure combined with service deployments is commonly referred to "
"as a **service mesh**. Just as microservices help to decouple feature "
"teams from each other, a service mesh helps to decouple operators from "
"application feature development and release processes. Istio turns "
"disparate microservices into an integrated service mesh by systemically "
"injecting a proxy into the network paths among them."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:57
msgid ""
"Google, IBM and Lyft joined forces to create Istio from a desire to "
"provide a reliable substrate for microservice development and "
"maintenance, based on our common experiences building and operating "
"massive scale microservices for internal and enterprise customers. Google"
" and IBM have extensive experience with these large scale microservices "
"in their own applications and with their enterprise customers in "
"sensitive/regulated environments, while Lyft developed Envoy to address "
"their internal operability challenges. `Lyft open sourced Envoy "
"<https://eng.lyft.com/announcing-envoy-c-l7-proxy-and-communication-bus-"
"92520b6c8191>`_ after successfully using it in production for over a year"
" to manage more than 100 services spanning 10,000 VMs, processing 2M "
"requests/second."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:71
msgid "Benefits of Istio"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:73
msgid ""
"**Fleet-wide Visibility**: Failures happen, and operators need tools to "
"stay on top of the health of clusters and their graphs of microservices. "
"Istio produces detailed monitoring data about application and network "
"behaviors that is rendered using `Prometheus <https://prometheus.io/>`_ &"
" `Grafana <https://github.com/grafana/grafana>`_, and can be easily "
"extended to send metrics and logs to any collection, aggregation and "
"querying system. Istio enables analysis of performance hotspots and "
"diagnosis of distributed failure modes with `Zipkin "
"<https://github.com/openzipkin/zipkin>`_ tracing."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:93
msgid ""
"**Resiliency and efficiency**: When developing microservices, operators "
"need to assume that the network will be unreliable. Operators can use "
"retries, load balancing, flow-control (HTTP/2), and circuit-breaking to "
"compensate for some of the common failure modes due to an unreliable "
"network. Istio provides a uniform approach to configuring these features,"
" making it easier to operate a highly resilient service mesh."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:100
msgid ""
"**Developer productivity**: Istio provides a significant boost to "
"developer productivity by letting them focus on building service features"
" in their language of choice, while Istio handles resiliency and "
"networking challenges in a uniform way. Developers are freed from having "
"to bake solutions to distributed systems problems into their code. Istio "
"further improves productivity by providing common functionality "
"supporting A/B testing, canarying, and fault injection."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:108
msgid ""
"**Policy Driven Ops**: Istio empowers teams with different areas of "
"concern to operate independently. It decouples cluster operators from the"
" feature development cycle, allowing improvements to security, "
"monitoring, scaling, and service topology to be rolled out *without* code"
" changes. Operators can route a precise subset of production traffic to "
"qualify a new service release. They can inject failures or delays into "
"traffic to test the resilience of the service mesh, and set up rate "
"limits to prevent services from being overloaded. Istio can also be used "
"to enforce compliance rules, defining ACLs between services to allow only"
" authorized services to talk to each other."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:119
msgid ""
"**Secure by default**: It is a common fallacy of distributed computing "
"that the network is secure. Istio enables operators to authenticate and "
"secure all communication between services using a mutual TLS connection, "
"without burdening the developer or the operator with cumbersome "
"certificate management tasks. Our security framework is aligned with the "
"emerging `SPIFFE <https://spiffe.io/>`_ specification, and is based on "
"similar systems that have been tested extensively inside Google."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:127
msgid ""
"**Incremental Adoption**: We designed Istio to be completely transparent "
"to the services running in the mesh, allowing teams to incrementally "
"adopt features of Istio over time. Adopters can start with enabling "
"fleet-wide visibility and once theyâ€™re comfortable with Istio in their "
"environment they can switch on other features as needed."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:134
msgid "Join us in this journey"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:136
msgid ""
"Istio is a completely open development project. Today we are releasing "
"version 0.1, which works in a Kubernetes cluster, and we plan to have "
"major new releases every 3 months, including support for additional "
"environments. Our goal is to enable developers and operators to rollout "
"and operate microservices with agility, complete visibility of the "
"underlying network, and uniform control and security in all environments."
" We look forward to working with the Istio community and our partners "
"towards these goals, following our `roadmap </about/feature-stages/>`_."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:146
msgid ""
"Visit `here <https://github.com/istio/istio/releases>`_ to get the latest"
" released bits."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:149
msgid ""
"View the `presentation </talks/istio_talk_gluecon_2017.pdf>`_ from "
"GlueCon 2017, where Istio was unveiled."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:153
msgid "Community"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:155
msgid ""
"We are excited to see early commitment to support the project from many "
"companies in the community: `Red Hat <https://blog.openshift.com/red-hat-"
"istio-launch/>`_ with Red Hat OpenShift and OpenShift Application "
"Runtimes, Pivotal with `Pivotal Cloud Foundry "
"<https://content.pivotal.io/blog/pivotal-and-istio-advancing-the-"
"ecosystem-for-microservices-in-the-enterprise>`_, WeaveWorks with `Weave "
"Cloud <https://www.weave.works/blog/istio-weave-cloud/>`_ and Weave Net "
"2.0, `Tigera <https://www.projectcalico.org/welcoming-istio-to-the-"
"kubernetes-networking-community>`_ with the Project Calico Network Policy"
" Engine and `Datawire <https://www.datawire.io/istio-and-datawire-"
"ecosystem/>`_ with the Ambassador project. We hope to see many more "
"companies join us in this journey."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:170
msgid "To get involved, connect with us via any of these channels:"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:172
msgid "`istio.io <>`_ for documentation and examples."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:174
msgid ""
"The `Istio discussion board <https://discuss.istio.io>`_ general "
"discussions,"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:177
msgid ""
"`Stack Overflow <https://stackoverflow.com/questions/tagged/istio>`_ for "
"curated questions and answers"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:180
msgid "`GitHub <https://github.com/istio/istio/issues>`_ for filing issues"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:182
msgid "[@IstioMesh](https://twitter.com/IstioMesh) on Twitter"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:184
msgid "From everyone working on Istio, welcome aboard!"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:187
msgid "Release notes"
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:189
msgid "Installation of Istio into a Kubernetes namespace with a single command."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:191
msgid "Semi-automated injection of Envoy proxies into Kubernetes pods."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:192
msgid "Automatic traffic capture for Kubernetes pods using iptables."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:193
msgid "In-cluster load balancing for HTTP, gRPC, and TCP traffic."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:194
msgid "Support for timeouts, retries with budgets, and circuit breakers."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:195
msgid ""
"Istio-integrated Kubernetes Ingress support (Istio acts as an Ingress "
"Controller)."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:197
msgid ""
"Fine-grained traffic routing controls, including A/B testing, canarying, "
"red/black deployments."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:199
msgid "Flexible in-memory rate limiting."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:200
msgid "L7 telemetry and logging for HTTP and gRPC using Prometheus."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:201
msgid "Grafana dashboards showing per-service L7 metrics."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:202
msgid "Request tracing through Envoy with Zipkin."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:203
msgid "Service-to-service authentication using mutual TLS."
msgstr ""

#: ../../source/news/releases/0.x/announcing-0.1/index.rst:204
msgid "Simple service-to-service authorization using deny expressions."
msgstr ""

