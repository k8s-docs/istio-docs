# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:2
msgid "egress-traffic-control-in-istio-part-1"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:4
msgid ""
"This is part 1 in a new series about secure control of egress traffic in "
"Istio that I am going to publish. In this installment, I explain why you "
"should apply egress traffic control to your cluster, the attacks "
"involving egress traffic you want to prevent, and the requirements for a "
"system for egress traffic control to do so. Once you agree that you "
"should control the egress traffic coming from your cluster, the following"
" questions arise: What is required from a system for secure control of "
"egress traffic? Which is the best solution to fulfill these requirements?"
" (spoiler: Istio in my opinion) Future installments will describe `the "
"implementation of the secure control of egress traffic in Istio "
"</blog/2019/egress-traffic-control-in-istio-part-2/>`_ and compare it "
"with other solutions."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:17
msgid ""
"The most important security aspect for a service mesh is probably ingress"
" traffic. You definitely must prevent attackers from penetrating the "
"cluster through ingress APIs. Having said that, securing the traffic "
"leaving the mesh is also very important. Once your cluster is "
"compromised, and you must be prepared for that scenario, you want to "
"reduce the damage as much as possible and prevent the attackers from "
"using the cluster for further attacks on external services and legacy "
"systems outside of the cluster. To achieve that goal, you need secure "
"control of egress traffic."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:27
msgid ""
"Compliance requirements are another reason to implement secure control of"
" egress traffic. For example, the `Payment Card Industry (PCI) Data "
"Security Standard <https://www.pcisecuritystandards.org/pci_security/>`_ "
"requires that inbound and outbound traffic must be restricted to that "
"which is necessary:"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:36
msgid "*1.2.1 Restrict inbound and outbound traffic to that which"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:37
msgid ""
"is necessary for the cardholder data environment, and specifically deny "
"all other traffic.*"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:40
msgid "And specifically regarding outbound traffic:"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:44
msgid "*1.3.4 Do not allow unauthorized outbound traffic from the"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:45
msgid ""
"cardholder data environment to the Internet… All traffic outbound from "
"the cardholder data environment should be evaluated to ensure that it "
"follows established, authorized rules. Connections should be inspected to"
" restrict traffic to only authorized communications (for example by "
"restricting source/destination addresses/ports, and/or blocking of "
"content).*"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:52
msgid "Let’s start with the attacks that involve egress traffic."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:55
msgid "The attacks"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:57
msgid ""
"An IT organization must assume it will be attacked if it hasn’t been "
"attacked already, and that part of its infrastructure could already be "
"compromised or become compromised in the future. Once attackers are able "
"to penetrate an application in a cluster, they can proceed to attack "
"external services: legacy systems, external web services and databases. "
"The attackers may want to steal the data of the application and to "
"transfer it to their external servers. Attackers’ malware may require "
"access to attackers’ servers to download updates. The attackers may use "
"pods in the cluster to perform DDOS attacks or to break into external "
"systems. Even though you `cannot know "
"<https://en.wikipedia.org/wiki/There_are_known_knowns>`_ all the possible"
" types of attacks, you want to reduce possibilities for any attacks, both"
" for known and unknown ones."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:71
msgid ""
"The external attackers gain access to the application’s container from "
"outside the mesh through a bug in the application but attackers can also "
"be internal, for example, malicious DevOps people inside the "
"organization."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:76
msgid ""
"To prevent the attacks described above, some form of egress traffic "
"control must be applied. Let me present egress traffic control in the "
"following section."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:81
msgid "The solution: secure control of egress traffic"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:83
msgid ""
"Secure control of egress traffic means monitoring the egress traffic and "
"enforcing all the security policies regarding the egress traffic. "
"Monitoring the egress traffic, enables you to analyze it, possibly "
"offline, and detect the attacks even if you were unable to prevent them "
"in real time. Another good practice to reduce possibilities of attacks is"
" to specify policies that limit access following the `Need to know "
"<https://en.wikipedia.org/wiki/Need_to_know#In_computer_technology%5D>`_ "
"principle: only the applications that need external services should be "
"allowed to access the external services they need."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:93
msgid ""
"Let me now turn to the requirements for egress traffic control we "
"collected."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:97
msgid "Requirements for egress traffic control"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:99
msgid ""
"My colleagues at IBM and I collected requirements for secure control of "
"egress traffic from several customers, and combined them with the `egress"
" traffic control requirements from Kubernetes Network Special Interest "
"Group <https://docs.google.com/document/d/1-Cq_Y-"
"yuyNklvdnaZF9Qngl3xe0NnArT7Xt_Wno9beg>`_."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:105
msgid "Istio 1.1 satisfies all gathered requirements:"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:107
msgid ""
"Support for `TLS "
"<https://en.wikipedia.org/wiki/Transport_Layer_Security>`_ with `SNI "
"<https://en.wikipedia.org/wiki/Server_Name_Indication>`_ or for `TLS "
"origination </docs/reference/glossary/#tls-origination>`_ by Istio."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:113
msgid "**Monitor** SNI and the source workload of every egress access."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:115
msgid "Define and enforce **policies per cluster**, e.g.:"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:117
msgid ""
"all applications in the cluster may access ``service1.foo.com`` (a "
"specific host)"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:120
msgid ""
"all applications in the cluster may access any host of the form "
"``*.bar.com`` (a wildcarded domain)"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:123
msgid "All unspecified access must be blocked."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:125
msgid "Define and enforce **policies per source**, *Kubernetes-aware*:"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:127
msgid "application ``A`` may access ``*.foo.com``."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:129
msgid "application ``B`` may access ``*.bar.com``."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:131
msgid ""
"All other access must be blocked, in particular access of application "
"``A`` to ``service1.bar.com``."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:134
msgid ""
"**Prevent tampering**. In case an application pod is compromised, prevent"
" the compromised pod from escaping monitoring, from sending fake "
"information to the monitoring system, and from breaking the egress "
"policies."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:139
msgid "Nice to have: traffic control is **transparent** to the applications."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:141
msgid ""
"Let me explain each requirement in more detail. The first requirement "
"states that only TLS traffic to the external services must be supported. "
"The requirement emerged upon observation that all the traffic that leaves"
" the cluster must be encrypted. This means that either the applications "
"perform TLS origination or Istio must perform TLS origination for them. "
"Note that in the case an application performs TLS origination, the Istio "
"proxies cannot see the original traffic, only the encrypted one, so the "
"proxies see the TLS protocol only. For the proxies it does not matter if "
"the original protocol is HTTP or MongoDB, all the Istio proxies can see "
"is TLS traffic."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:152
msgid ""
"The second requirement states that SNI and the source of the traffic must"
" be monitored. Monitoring is the first step to prevent attacks. Even if "
"attackers would be able to access external services from the cluster, if "
"the access is monitored, there is a chance to discover the suspicious "
"traffic and take a corrective action."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:158
msgid ""
"Note that in the case of TLS originated by an application, the Istio "
"sidecar proxies can only see TCP traffic and a TLS handshake that "
"includes SNI. A label of the source pod could identify the source of the "
"traffic but a service account of the pod or some other source identifier "
"could be used. We call this property of an egress control system as "
"*being Kubernetes-aware*: the system must understand Kubernetes artifacts"
" like pods and service accounts. If the system is not Kubernetes-aware, "
"it can only monitor the IP address as the identifier of the source."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:168
msgid ""
"The third requirement states that Istio operators must be able to define "
"policies for egress traffic for the entire cluster. The policies state "
"which external services may be accessed by any pod in the cluster. The "
"external services can be identified either by a `Fully qualified domain "
"name <https://en.wikipedia.org/wiki/Fully_qualified_domain_name>`_ of the"
" service, e.g. \\ ``www.ibm.com`` or by a wildcarded domain, e.g. \\ "
"``*.ibm.com``. Only the specified external services may be accessed, all "
"other egress traffic is blocked."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:177
msgid ""
"This requirement originates from the need to prevent attackers from "
"accessing malicious sites, for example for downloading "
"updates/instructions for their malware. You also want to limit the number"
" of external sites that the attackers can access and attack. You want to "
"allow access only to the external services that the applications in the "
"cluster need to access and to block access to all the other services, "
"this way you reduce the `attack surface "
"<https://en.wikipedia.org/wiki/Attack_surface>`_. While the external "
"services can have their own security mechanisms, you want to exercise "
"`Defense in depth "
"<https://en.wikipedia.org/wiki/Defense_in_depth_(computing)>`_ and to "
"have multiple security layers: a security layer in your cluster in "
"addition to the security layers in the external systems."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:191
msgid ""
"This requirement means that the external services must be identifiable by"
" domain names. We call this property of an egress control system as "
"*being DNS-aware*. If the system is not DNS-aware, the external services "
"must be specified by IP addresses. Using IP addresses is not convenient "
"and often is not feasible, since the IP addresses of a service can "
"change. Sometimes all the IP addresses of a service are not even known, "
"for example in the case of `CDNs "
"<https://en.wikipedia.org/wiki/Content_delivery_network>`_."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:200
msgid ""
"The fourth requirement states that the source of the egress traffic must "
"be added to the policies effectively extending the third requirement. "
"Policies can specify which source can access which external service and "
"the source must be identified just as in the second requirement, for "
"example, by a label of the source pod or by service account of the pod. "
"It means that policy enforcement must also be *Kubernetes-aware*. If "
"policy enforcement is not Kubernetes-aware, the policies must identify "
"the source of traffic by the IP of the pod, which is not convenient, "
"especially since the pods can come and go so their IPs are not static."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:210
msgid ""
"The fifth requirement states that even if the cluster is compromised and "
"the attackers control some of the pods, they must not be able to cheat "
"the monitoring or to violate policies of the egress control system. We "
"say that such a system provides *secure* control of egress traffic."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:215
msgid ""
"The sixth requirement states that the traffic control should be provided "
"without changing the application containers, in particular without "
"changing the code of the applications and without changing the "
"environment of the containers. We call such a control of egress traffic "
"*transparent*."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:221
msgid ""
"In the next posts I will show that Istio can function as an example of an"
" egress traffic control system that satisfies all of these requirements, "
"in particular it is transparent, DNS-aware, and Kubernetes-aware."
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:227
msgid "Summary"
msgstr ""

#: ../../source/blog/2019/egress-traffic-control-in-istio-part-1/index.rst:229
msgid ""
"I hope that you are convinced that controlling egress traffic is "
"important for the security of your cluster. In `the part 2 of this series"
" </blog/2019/egress-traffic-control-in-istio-part-2/>`_ I describe the "
"Istio way to perform secure control of egress traffic. In `the part 3 of "
"this series </blog/2019/egress-traffic-control-in-istio-part-3/>`_ I "
"compare it with alternative solutions such as `Kubernetes Network "
"Policies <https://kubernetes.io/docs/concepts/services-networking"
"/network-policies/>`_ and legacy egress proxies/firewalls."
msgstr ""

