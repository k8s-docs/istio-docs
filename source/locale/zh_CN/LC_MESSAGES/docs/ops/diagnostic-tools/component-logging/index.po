# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:1
msgid ""
"Istio components are built with a flexible logging framework which "
"provides a number of features and controls to help operate these "
"components and facilitate diagnostics. You control these logging features"
" by passing command-line options when starting the components."
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:7
msgid "Logging scopes"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:9
msgid ""
"Logging messages output by a component are categorized by *scopes*. A "
"scope represents a set of related log messages which you can control as a"
" whole. Different components have different scopes, depending on the "
"features the component provides. All components have the ``default`` "
"scope, which is used for non-categorized log messages."
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:15
msgid ""
"As an example, as of this writing, Mixer has 5 scopes, representing "
"different functional areas within Mixer:"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:18
msgid "``adapters``"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:19
msgid "``api``"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:20
msgid "``attributes``"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:21
msgid "``default``"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:22
msgid "``grpcAdapter``"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:24
msgid ""
"Pilot, Citadel, and Galley have their own scopes which you can discover "
"by looking at their `reference documentation "
"</docs/reference/commands/>`_."
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:28
msgid "Each scope has a unique output level which is one of:"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:30
msgid "none"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:31
msgid "error"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:32
msgid "warning"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:33
msgid "info"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:34
msgid "debug"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:36
msgid ""
"where ``none`` produces no output for the scope, and ``debug`` produces "
"the maximum amount of output. The default level for all scopes is "
"``info`` which is intended to provide the right amount of logging "
"information for operating Istio in normal conditions."
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:41
msgid ""
"To control the output level, you use the ``--log_output_level`` command-"
"line option. For example:"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:47
msgid "attributes=debug,adapters=warning"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:49
msgid ""
"In addition to controlling the output level from the command-line, you "
"can also control the output level of a running component by using its "
"`ControlZ </docs/ops/diagnostic-tools/controlz>`_ interface."
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:54
msgid "Controlling output"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:56
msgid ""
"Log messages are normally sent to a componentâ€™s standard output stream. "
"The ``--log_target`` option lets you direct the output to any number of "
"different locations. You give the option a comma-separated list of file "
"system paths, along with the special values ``stdout`` and ``stderr`` to "
"indicate the standard output and standard error streams respectively."
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:62
msgid ""
"Log messages are normally output in a human-friendly format. The "
"``--log_as_json`` option can be used to force the output into JSON, which"
" can be easier for tools to process."
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:67
msgid "Log rotation"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:69
msgid ""
"Istio components can automatically manage log rotation, which make it "
"simple to break up large logs into smaller log files. The "
"``--log_rotate`` option lets you specify the base file name to use for "
"rotation. Derived names will be used for individual log files."
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:74
msgid ""
"The ``--log_rotate_max_age`` option lets you specify the maximum number "
"of days before file rotation takes place, while the "
"``--log_rotate_max_size`` option let you specify the maximum size in "
"megabytes before file rotation takes place. Finally, the "
"``--log_rotate_max_backups`` option lets you control the maximum number "
"of rotated files to keep, older files will be automatically deleted."
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:82
msgid "Component debugging"
msgstr ""

#: ../../source/docs/ops/diagnostic-tools/component-logging/index.rst:84
msgid ""
"The ``--log_caller`` and ``--log_stacktrace_level`` options let you "
"control whether log information includes programmer-level information. "
"This is useful when trying to track down bugs in a component but is not "
"normally used in day-to-day operation."
msgstr ""

