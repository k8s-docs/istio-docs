# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/ops/deployment/deployment-models/index.rst:2
msgid "deployment-models"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:4
msgid ""
"When configuring a production deployment of Istio, you need to answer a "
"number of questions. Will the mesh be confined to a single {{< gloss "
">}}cluster{{< /gloss >}} or distributed across multiple clusters? Will "
"all the services be located in a single fully connected network, or will "
"gateways be required to connect services across multiple networks? Is "
"there a single {{< gloss >}}control plane{{< /gloss >}}, potentially "
"shared across clusters, or are there multiple control planes deployed to "
"ensure high availability (HA)? If there is more than one cluster being "
"deployed, and more specifically in isolated networks, are they going to "
"be connected into a single {{< gloss >}}multicluster{{< /gloss >}} "
"service mesh or will they be federated into a {{< gloss >}}multi-mesh{{< "
"/gloss >}} deployment?"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:17
msgid ""
"All of these questions, among others, represent independent dimensions of"
" configuration for an Istio deployment."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:20
msgid "single or multiple cluster"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:21
msgid "single or multiple network"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:22
msgid "single or multiple control plane"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:23
msgid "single or multiple mesh"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:25
msgid ""
"All combinations are possible, although some are more common than others "
"and some are clearly not very interesting (for example, multiple mesh in "
"a single cluster)."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:29
msgid ""
"In a production deployment involving multiple clusters, the deployment "
"may use a mix of patterns. For example, having more than one control "
"plane is recommended for HA, but you could achieve this for a 3 cluster "
"deployment by deploying 2 clusters with a single shared control plane and"
" then adding the third cluster with a second control plane in a different"
" network. All three clusters could then be configured to share both "
"control planes so that all the clusters have 2 sources of control to "
"ensure HA."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:38
msgid ""
"Choosing the right deployment model depends on the isolation, "
"performance, and HA requirements for your use case. This guide describes "
"the various options and considerations when configuring your Istio "
"deployment."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:44
msgid "Cluster models"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:46
msgid ""
"The workload instances of your application run in one or more {{< gloss "
"“cluster” >}}clusters{{< /gloss >}}. For isolation, performance, and high"
" availability, you can confine clusters to availability zones and "
"regions."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:51
msgid ""
"Production systems, depending on their requirements, can run across "
"multiple clusters spanning a number of zones or regions, leveraging cloud"
" load balancers to handle things like locality and zonal or regional fail"
" over."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:56
msgid ""
"In most cases, clusters represent boundaries for configuration and "
"endpoint discovery. For example, each Kubernetes cluster has an API "
"Server which manages the configuration for the cluster as well as serving"
" {{< gloss >}}service endpoint{{< /gloss >}} information as pods are "
"brought up or down. Since Kubernetes configures this behavior on a per-"
"cluster basis, this approach helps limit the potential problems caused by"
" incorrect configurations."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:64
msgid ""
"In Istio, you can configure a single service mesh to span any number of "
"clusters."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:68
msgid "Single cluster"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:70
msgid ""
"In the simplest case, you can confine an Istio mesh to a single {{< gloss"
" >}}cluster{{< /gloss >}}. A cluster usually operates over a `single "
"network <#single-network>`_, but it varies between infrastructure "
"providers. A single cluster and single network model includes a control "
"plane, which results in the simplest Istio deployment."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:83
msgid ""
"Single cluster deployments offer simplicity, but lack other features, for"
" example, fault isolation and fail over. If you need higher availability,"
" you should use multiple clusters."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:88
msgid "Multiple clusters"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:90
msgid ""
"You can configure a single mesh to include multiple {{< gloss “cluster” "
">}}clusters{{< /gloss >}}. Using a {{< gloss >}}multicluster{{< /gloss "
">}} deployment within a single mesh affords the following capabilities "
"beyond that of a single cluster deployment:"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:95
msgid ""
"Fault isolation and fail over: ``cluster-1`` goes down, fail over to "
"``cluster-2``."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:97
msgid ""
"Location-aware routing and fail over: Send requests to the nearest "
"service."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:99
msgid ""
"Various `control plane models <#control-plane-models>`_: Support "
"different levels of availability."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:101
msgid "Team or project isolation: Each team runs its own set of clusters."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:109
msgid ""
"Multicluster deployments give you a greater degree of isolation and "
"availability but increase complexity. If your systems have high "
"availability requirements, you likely need clusters across multiple zones"
" and regions. You can canary configuration changes or new binary releases"
" in a single cluster, where the configuration changes only affect a small"
" amount of user traffic. Additionally, if a cluster has a problem, you "
"can temporarily route traffic to nearby clusters until you address the "
"issue."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:118
msgid ""
"You can configure inter-cluster communication based on the `network "
"<#network-models>`_ and the options supported by your cloud provider. For"
" example, if two clusters reside on the same underlying network, you can "
"enable cross-cluster communication by simply configuring firewall rules."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:125
msgid "Network models"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:127
msgid ""
"Many production systems require multiple networks or subnets for "
"isolation and high availability. Istio supports spanning a service mesh "
"over a variety of network topologies. This approach allows you to select "
"the network model that fits your existing network topology."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:133
msgid "Single network"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:135
msgid ""
"In the simplest case, a service mesh operates over a single fully "
"connected network. In a single network model, all {{< gloss “workload "
"instance” >}}workload instances{{< /gloss >}} can reach each other "
"directly without an Istio gateway."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:140
msgid ""
"A single network allows Istio to configure service consumers in a uniform"
" way across the mesh with the ability to directly address workload "
"instances."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:151
msgid "Multiple networks"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:153
msgid ""
"You can span a single service mesh across multiple networks; such a "
"configuration is known as **multi-network**."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:156
msgid ""
"Multiple networks afford the following capabilities beyond that of single"
" networks:"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:159
msgid "Overlapping IP or VIP ranges for **service endpoints**"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:160
msgid "Crossing of administrative boundaries"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:161
msgid "Fault tolerance"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:162
msgid "Scaling of network addresses"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:163
msgid "Compliance with standards that require network segmentation"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:165
msgid ""
"In this model, the workload instances in different networks can only "
"reach each other through one or more `Istio gateways </docs/concepts"
"/traffic-management/#gateways>`_. Istio uses **partitioned service "
"discovery** to provide consumers a different view of {{< gloss >}}service"
" endpoint{{< /gloss >}}s. The view depends on the network of the "
"consumers."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:179
msgid "Control plane models"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:181
msgid ""
"An Istio mesh uses the {{< gloss >}}control plane{{< /gloss >}} to "
"configure all communication between workload instances within the mesh. "
"You can replicate the control plane, and workload instances connect to "
"any control plane instance to get their configuration."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:186
msgid ""
"In the simplest case, you can run your mesh with a control plane on a "
"single cluster."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:196
msgid ""
"Multicluster deployments can also share control plane instances. In this "
"case, the control plane instances can reside in one or more clusters."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:205
msgid ""
"For high availability, you should deploy a control plane across multiple "
"clusters, zones, or regions."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:213
msgid "control plane instances for each region"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:212
msgid ""
":caption:A service mesh with control plane instances for each region "
":width: 75%"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:215
msgid "This model affords the following benefits:"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:217
msgid ""
"Improved availability: If a control plane becomes unavailable, the scope "
"of the outage is limited to only that control plane."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:220
msgid ""
"Configuration isolation: You can make configuration changes in one "
"cluster, zone, or region without impacting others."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:223
msgid ""
"You can improve control plane availability through fail over. When a "
"control plane instance becomes unavailable, workload instances can "
"connect to another available control plane instance. Fail over can happen"
" across clusters, zones, or regions."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:235
msgid ""
"The following list ranks control plane deployment examples by "
"availability:"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:237
msgid "One cluster per region (**lowest availability**)"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:238
msgid "Multiple clusters per region"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:239
msgid "One cluster per zone"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:240
msgid "Multiple clusters per zone"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:241
msgid "Each cluster (**highest availability**)"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:244
msgid "Identity and trust models"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:246
msgid ""
"When a workload instance is created within a service mesh, Istio assigns "
"the workload an {{< gloss >}}identity{{< /gloss >}}."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:249
msgid ""
"The Certificate Authority (CA) creates and signs the certificates used to"
" verify the identities used within the mesh. You can verify the identity "
"of the message sender with the public key of the CA that created and "
"signed the certificate for that identity. A **trust bundle** is the set "
"of all CA public keys used by an Istio mesh. With a mesh’s trust bundle, "
"anyone can verify the sender of any message coming from that mesh."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:258
msgid "Trust within a mesh"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:260
msgid ""
"Within a single Istio mesh, Istio ensures each workload instance has an "
"appropriate certificate representing its own identity, and the trust "
"bundle necessary to recognize all identities within the mesh and any "
"federated meshes. The CA only creates and signs the certificates for "
"those identities. This model allows workload instances in the mesh to "
"authenticate each other when communicating."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:274
msgid "Trust between meshes"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:276
msgid ""
"If a service in a mesh requires a service in another, you must federate "
"identity and trust between the two meshes. To federate identity and "
"trust, you must exchange the trust bundles of the meshes. You can "
"exchange the trust bundles either manually or automatically using a "
"protocol such as `SPIFFE Trust Domain Federation "
"<https://docs.google.com/document/d/1OC9nI2W04oghhbEDJpKdIUIw-"
"G23YzWeHZxwGLIkB8k/edit>`_. Once you import a trust bundle to a mesh, you"
" can configure local policies for those identities."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:292
msgid "Mesh models"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:294
msgid ""
"Istio supports having all of your services in a {{< gloss “service mesh” "
">}}mesh{{< /gloss >}}, or federating multiple meshes together, which is "
"also known as {{< gloss >}}multi-mesh{{< /gloss >}}."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:299
msgid "Single mesh"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:301
msgid ""
"The simplest Istio deployment is a single mesh. Within a mesh, service "
"names are unique. For example, only one service can have the name "
"``mysvc`` in the ``foo`` namespace. Additionally, workload instances "
"share a common identity since service account names are unique within a "
"namespace, just like service names."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:307
msgid ""
"A single mesh can span `one or more clusters <#cluster-models>`_ and `one"
" or more networks <#network-models>`_. Within a mesh, `namespaces "
"<#namespace-tenancy>`_ are used for `tenancy <#tenancy-models>`_."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:313
msgid "Multiple meshes"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:315
msgid ""
"Multiple mesh deployments result from {{< gloss >}}mesh federation{{< "
"/gloss >}}."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:318
msgid ""
"Multiple meshes afford the following capabilities beyond that of a single"
" mesh:"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:321
msgid "Organizational boundaries: lines of business"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:322
msgid ""
"Service name or namespace reuse: multiple distinct uses of the "
"``default`` namespace"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:324
msgid "Stronger isolation: isolating test workloads from production workloads"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:327
msgid ""
"You can enable inter-mesh communication with {{< gloss >}}mesh "
"federation{{< /gloss >}}. When federating, each mesh can expose a set of "
"services and identities, which all participating meshes can recognize."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:337
msgid ""
"To avoid service naming collisions, you can give each mesh a globally "
"unique **mesh ID**, to ensure that the fully qualified domain name (FQDN)"
" for each service is distinct."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:341
msgid ""
"When federating two meshes that do not share the same {{< gloss >}}trust "
"domain{{< /gloss >}}, you must {{< gloss “mesh federation”>}}federate{{< "
"/gloss >}} {{< gloss >}}identity{{< /gloss >}} and **trust bundles** "
"between them. See the section on `Multiple Trust Domains <#trust-between-"
"meshes>`_ for an overview."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:348
msgid "Tenancy models"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:350
msgid ""
"In Istio, a **tenant** is a group of users that share common access and "
"privileges to a set of deployed workloads. Generally, you isolate the "
"workload instances from multiple tenants from each other through network "
"configuration and policies."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:355
msgid ""
"You can configure tenancy models to satisfy the following organizational "
"requirements for isolation:"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:358
msgid "Security"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:359
msgid "Policy"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:360
msgid "Capacity"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:361
msgid "Cost"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:362
msgid "Performance"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:364
msgid "Istio supports two types of tenancy models:"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:366
msgid "`Namespace tenancy <#namespace-tenancy>`_"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:367
msgid "`Cluster tenancy <#cluster-tenancy>`_"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:370
msgid "Namespace tenancy"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:372
msgid ""
"Istio uses `namespaces "
"<https://kubernetes.io/docs/reference/glossary/?fundamental=true#term-"
"namespace>`_ as a unit of tenancy within a mesh. Istio also works in "
"environments that don’t implement namespace tenancy. In environments that"
" do, you can grant a team permission to deploy their workloads only to a "
"given namespace or set of namespaces. By default, services from multiple "
"tenant namespaces can communicate with each other."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:386
msgid ""
"To improve isolation, you can selectively choose which services to expose"
" to other namespaces. You can configure authorization policies for "
"exposed services to restrict access to only the appropriate callers."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:396
msgid ""
"When using `multiple clusters <#multiple-clusters>`_, the namespaces in "
"each cluster sharing the same name are considered the same namespace. For"
" example, ``Service B`` in the ``foo`` namespace of ``cluster-1`` and "
"``Service B`` in the ``foo`` namespace of ``cluster-2`` refer to the same"
" service, and Istio merges their endpoints for service discovery and load"
" balancing."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:410
msgid "Cluster tenancy"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:412
msgid ""
"Istio supports using clusters as a unit of tenancy. In this case, you can"
" give each team a dedicated cluster or set of clusters to deploy their "
"workloads. Permissions for a cluster are usually limited to the members "
"of the team that owns it. You can set various roles for finer grained "
"control, for example:"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:418
msgid "Cluster administrator"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:419
msgid "Developer"
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:421
msgid ""
"To use cluster tenancy with Istio, you configure each cluster as an "
"independent mesh. Alternatively, you can use Istio to implement a group "
"of clusters as a single tenant. Then, each team can own one or more "
"clusters, but you configure all their clusters as a single mesh. To "
"connect the meshes of the various teams together, you can federate the "
"meshes into a multi-mesh deployment."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:434
msgid ""
"Since a different team or organization operates each mesh, service naming"
" is rarely distinct. For example, the ``mysvc`` in the ``foo`` namespace "
"of ``cluster-1`` and the ``mysvc`` service in the ``foo`` namespace of "
"``cluster-2`` do not refer to the same service. The most common example "
"is the scenario in Kubernetes where many teams deploy their workloads to "
"the ``default`` namespace."
msgstr ""

#: ../../source/docs/ops/deployment/deployment-models/index.rst:441
msgid ""
"When each team has their own mesh, cross-mesh communication follows the "
"concepts described in the `multiple meshes <#multiple-meshes>`_ model."
msgstr ""

