# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:2
msgid "performance-and-scalability"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:4
msgid ""
"Istio makes it easy to create a network of deployed services with rich "
"routing, load balancing, service-to-service authentication, monitoring, "
"and more - all without any changes to the application code. Istio strives"
" to provide these benefits with minimal resource overhead and aims to "
"support very large meshes with high request rates while adding minimal "
"latency."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:11
msgid ""
"The Istio data plane components, the Envoy proxies, handle data flowing "
"through the system. The Istio control plane components, Pilot, Galley and"
" Citadel, configure the data plane. The data plane and control plane have"
" distinct performance concerns."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:17
msgid "Performance summary for Istio {{< istio_release_name >}}"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:19
#, python-format
msgid ""
"The `Istio load tests "
"<https://github.com/istio/tools/tree/%7B%7B%3C%20source_branch_name%20%3E%7D%7D/perf/load>`_"
" mesh consists of **1000** services and **2000** sidecars with 70,000 "
"mesh-wide requests per second. After running the tests using Istio {{< "
"istio_release_name >}}, we get the following results:"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:25
msgid ""
"The Envoy proxy uses **0.5 vCPU** and **50 MB memory** per 1000 requests "
"per second going through the proxy."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:27
msgid ""
"The ``istio-telemetry`` service uses **0.6 vCPU** per 1000 **mesh-wide** "
"requests per second."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:29
msgid "Pilot uses **1 vCPU** and 1.5 GB of memory."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:30
msgid "The Envoy proxy adds 2.8 ms to the 90th percentile latency."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:33
msgid "Control plane performance"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:35
msgid ""
"Pilot configures sidecar proxies based on user authored configuration "
"files and the current state of the system. In a Kubernetes environment, "
"Custom Resource Definitions (CRDs) and deployments constitute the "
"configuration and state of the system. The Istio configuration objects "
"like gateways and virtual services, provide the user-authored "
"configuration. To produce the configuration for the proxies, Pilot "
"processes the combined configuration and system state from the Kubernetes"
" environment and the user-authored configuration."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:44
msgid ""
"The control plane supports thousands of services, spread across thousands"
" of pods with a similar number of user authored virtual services and "
"other configuration objects. Pilot’s CPU and memory requirements scale "
"with the amount of configurations and possible system states. The CPU "
"consumption scales with the following factors:"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:50
msgid "The rate of deployment changes."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:51
msgid "The rate of configuration changes."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:52
msgid "The number of proxies connecting to Pilot."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:54
msgid "however this part is inherently horizontally scalable."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:56
msgid ""
"When `namespace isolation </docs/reference/config/networking/sidecar/>`_ "
"is enabled, a single Pilot instance can support 1000 services, 2000 "
"sidecars with 1 vCPU and 1.5 GB of memory. You can increase the number of"
" Pilot instances to reduce the amount of time it takes for the "
"configuration to reach all proxies."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:64
msgid "Data plane performance"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:66
msgid "Data plane performance depends on many factors, for example:"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:68
msgid "Number of client connections"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:69
msgid "Target request rate"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:70
msgid "Request size and Response size"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:71
msgid "Number of proxy worker threads"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:72
msgid "Protocol"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:73
msgid "CPU cores"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:74
msgid "Number and types of proxy filters, specifically Mixer filter."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:76
msgid ""
"The latency, throughput, and the proxies’ CPU and memory consumption are "
"measured as a function of said factors."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:80
msgid "CPU and memory"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:82
msgid ""
"Since the sidecar proxy performs additional work on the data path, it "
"consumes CPU and memory. As of Istio 1.1, a proxy consumes about 0.6 vCPU"
" per 1000 requests per second."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:86
msgid ""
"The memory consumption of the proxy depends on the total configuration "
"state the proxy holds. A large number of listeners, clusters, and routes "
"can increase memory usage. Istio 1.1 introduced namespace isolation to "
"limit the scope of the configuration sent to a proxy. In a large "
"namespace, the proxy consumes approximately 50 MB of memory."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:92
msgid ""
"Since the proxy normally doesn’t buffer the data passing through, request"
" rate doesn’t affect the memory consumption."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:96
msgid "Latency"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:98
msgid ""
"Since Istio injects a sidecar proxy on the data path, latency is an "
"important consideration. Istio adds an authentication and a Mixer filter "
"to the proxy. Every additional filter adds to the path length inside the "
"proxy and affects latency."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:103
msgid ""
"The Envoy proxy collects raw telemetry data after a response is sent to "
"the client. The time spent collecting raw telemetry for a request does "
"not contribute to the total time taken to complete that request. However,"
" since the worker is busy handling the request, the worker won’t start "
"handling the next request immediately. This process adds to the queue "
"wait time of the next request and affects average and tail latencies. The"
" actual tail latency depends on the traffic pattern."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:112
msgid "Latency for Istio {{< istio_release_name >}}"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:114
#, python-format
msgid ""
"Inside the mesh, a request traverses the client-side proxy and then the "
"server-side proxy. In the default configuration of Istio {{< "
"istio_release_name >}} (i.e. Istio with telemetry v2), the two proxies "
"add about 2.8 ms and 2.7 ms to the 90th and 99th percentile latency, "
"respectively, over the baseline data plane latency. We obtained these "
"results using the `Istio benchmarks "
"<https://github.com/istio/tools/tree/%7B%7B%3C%20source_branch_name%20%3E%7D%7D/perf/benchmark>`_"
" for the ``http/1.1`` protocol, with a 1 kB payload at 1000 requests per "
"second using 16 client connections, 2 proxy workers and mutual TLS "
"enabled."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:125
msgid ""
"In upcoming Istio releases we are moving ``istio-policy`` and ``istio-"
"telemetry`` functionality into the proxy as ``TelemetryV2``. This will "
"decrease the amount data flowing through the system, which will in turn "
"reduce the CPU usage and latency."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:140
msgid ""
"``baseline`` Client pod directly calls the server pod, no sidecars are "
"present."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:141
msgid "``none-both`` Istio proxy with no Istio specific filters configured."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:142
msgid ""
"``telemetryv2-both`` **Istio 1.5 default** client and server sidecars are"
" present with telemetry v2 ``nullvm`` configured."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:143
msgid ""
"``mixer-both`` Client and server sidecars are present with mixer "
"configured."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:146
msgid "Benchmarking tools"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:148
msgid "Istio uses the following tools for benchmarking"
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:150
msgid ""
"`fortio.org <https://fortio.org/>`_ - a constant throughput load testing "
"tool."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:151
msgid ""
"`blueperf <https://github.com/blueperf/>`_ - a realistic cloud native "
"application."
msgstr ""

#: ../../source/docs/ops/deployment/performance-and-scalability/index.rst:152
#, python-format
msgid ""
"`isotope "
"<https://github.com/istio/tools/tree/%7B%7B%3C%20source_branch_name%20%3E%7D%7D/isotope>`_"
" - a synthetic application with configurable topology."
msgstr ""

