# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/examples/bookinfo/index.rst:2
msgid "Bookinfo Application"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:4
msgid ""
"This example deploys a sample application composed of four separate "
"microservices used to demonstrate various Istio features."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:9
msgid "If you installed Istio using the `Getting"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:10
msgid ""
"Started </docs/setup/getting-started/>`_ instructions, you already have "
"Bookinfo installed and you can skip these steps."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:13
msgid ""
"The application displays information about a book, similar to a single "
"catalog entry of an online book store. Displayed on the page is a "
"description of the book, book details (ISBN, number of pages, and so on),"
" and a few book reviews."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:18
msgid "The Bookinfo application is broken into four separate microservices:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:20
msgid ""
"``productpage``. The ``productpage`` microservice calls the ``details`` "
"and ``reviews`` microservices to populate the page."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:22
msgid "``details``. The ``details`` microservice contains book information."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:23
msgid ""
"``reviews``. The ``reviews`` microservice contains book reviews. It also "
"calls the ``ratings`` microservice."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:25
msgid ""
"``ratings``. The ``ratings`` microservice contains book ranking "
"information that accompanies a book review."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:28
msgid "There are 3 versions of the ``reviews`` microservice:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:30
msgid "Version v1 doesn’t call the ``ratings`` service."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:31
msgid ""
"Version v2 calls the ``ratings`` service, and displays each rating as 1 "
"to 5 black stars."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:33
msgid ""
"Version v3 calls the ``ratings`` service, and displays each rating as 1 "
"to 5 red stars."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:36
msgid "The end-to-end architecture of the application is shown below."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:43
msgid ""
"This application is polyglot, i.e., the microservices are written in "
"different languages. It’s worth noting that these services have no "
"dependencies on Istio, but make an interesting service mesh example, "
"particularly because of the multitude of services, languages and versions"
" for the ``reviews`` service."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:50
msgid "Before you begin"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:52
msgid ""
"If you haven’t already done so, setup Istio by following the instructions"
" in the `installation guide </docs/setup/>`_."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:56
msgid "Deploying the application"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:58
msgid ""
"To run the sample with Istio requires no changes to the application "
"itself. Instead, you simply need to configure and run the services in an "
"Istio-enabled environment, with Envoy sidecars injected along side each "
"service. The resulting deployment will look like this:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:68
msgid ""
"All of the microservices will be packaged with an Envoy sidecar that "
"intercepts incoming and outgoing calls for the services, providing the "
"hooks needed to externally control, via the Istio control plane, routing,"
" telemetry collection, and policy enforcement for the application as a "
"whole."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:75
msgid "Start the application services"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:79
msgid "If you use GKE, please ensure your cluster has at least 4"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:80
msgid ""
"standard GKE nodes. If you use Minikube, please ensure you have at least "
"4GB RAM."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:83
msgid "Change directory to the root of the Istio installation."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:85
msgid ""
"The default Istio installation uses `automatic sidecar injection "
"</docs/setup/additional-setup/sidecar-injection/#automatic-sidecar-"
"injection>`_. Label the namespace that will host the application with "
"``istio-injection=enabled``:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:93
msgid "istio-injection=enabled"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:97
msgid ""
"If you use OpenShift, make sure to give appropriate permissions to "
"service accounts on the namespace as described in `OpenShift setup page "
"</docs/setup/platform-setup/openshift/#privileged-security-context-"
"constraints-for-application-sidecars>`_."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:103
msgid "Deploy your application using the ``kubectl`` command:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:108
msgid "@samples/bookinfo/platform/kube/bookinfo.yaml@"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:112
msgid ""
"If you disabled automatic sidecar injection during installation and rely "
"on [manual sidecar injection] (/docs/setup/additional-setup/sidecar-"
"injection/#manual-sidecar-injection), use the `istioctl kube-inject "
"</docs/reference/commands/istioctl/#istioctl-kube-inject>`_ command to "
"modify the ``bookinfo.yaml`` file before deploying your application."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:123
msgid "@samples/bookinfo/platform/kube/bookinfo.yaml@)"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:127
msgid ""
"The command launches all four services shown in the ``bookinfo`` "
"application architecture diagram. All 3 versions of the reviews service, "
"v1, v2, and v3, are started."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:133
msgid ""
"In a realistic deployment, new versions of a microservice are deployed "
"over time instead of deploying all versions simultaneously."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:137
msgid "Confirm all services and pods are correctly defined and running:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:142
msgid ""
"PORT(S) AGE details 10.0.0.31 9080/TCP 6m kubernetes 10.0.0.1 443/TCP 7d "
"productpage 10.0.0.120 9080/TCP 6m ratings 10.0.0.15 9080/TCP 6m reviews "
"10.0.0.170 9080/TCP 6m"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:146
msgid "and"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:151
msgid ""
"details-v1-1520924117-48z17 2/2 Running 0 6m "
"productpage-v1-560495357-jk1lz 2/2 Running 0 6m "
"ratings-v1-734492171-rnr5l 2/2 Running 0 6m reviews-v1-874083890-f0qf0 "
"2/2 Running 0 6m reviews-v2-1343845940-b34q5 2/2 Running 0 6m "
"reviews-v3-1813607990-8ch52 2/2 Running 0 6m"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:158
msgid ""
"To confirm that the Bookinfo application is running, send a request to it"
" by a ``curl`` command from some pod, for example from ``ratings``:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:165
msgid ""
"-o jsonpath=‘{.items[0].metadata.name}’) -c ratings – curl "
"productpage:9080/productpage \\| grep -o \""
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:172
#: ../../source/docs/examples/bookinfo/index.rst:242
msgid ".\\*"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:178
#: ../../source/docs/examples/bookinfo/index.rst:236
#: ../../source/docs/examples/bookinfo/index.rst:248
msgid "\""
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:184
#: ../../source/docs/examples/bookinfo/index.rst:254
msgid "Simple Bookstore App"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:193
msgid "Determine the ingress IP and port"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:195
msgid ""
"Now that the Bookinfo services are up and running, you need to make the "
"application accessible from outside of your Kubernetes cluster, e.g., "
"from a browser. An `Istio Gateway </docs/concepts/traffic-"
"management/#gateways>`_ is used for this purpose."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:201
msgid "Define the ingress gateway for the application:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:206
msgid "@samples/bookinfo/networking/bookinfo-gateway.yaml@"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:208
msgid "Confirm the gateway has been created:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:215
msgid ""
"Follow `these instructions </docs/tasks/traffic-management/ingress"
"/ingress-control/#determining-the-ingress-ip-and-ports>`_ to set the "
"``INGRESS_HOST`` and ``INGRESS_PORT`` variables for accessing the "
"gateway. Return here, when they are set."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:220
msgid "Set ``GATEWAY_URL``:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:225
msgid "GATEWAY_URL=\\ :math:`INGRESS_HOST:`\\ INGRESS_PORT"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:228
msgid "Confirm the app is accessible from outside the cluster"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:230
msgid ""
"To confirm that the Bookinfo application is accessible from outside the "
"cluster, run the following ``curl`` command:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:262
msgid ""
"You can also point your browser to ``http://$GATEWAY_URL/productpage`` to"
" view the Bookinfo web page. If you refresh the page several times, you "
"should see different versions of reviews shown in ``productpage``, "
"presented in a round robin style (red stars, black stars, no stars), "
"since we haven’t yet used Istio to control the version routing."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:269
msgid "Apply default destination rules"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:271
msgid ""
"Before you can use Istio to control the Bookinfo version routing, you "
"need to define the available versions, called *subsets*, in `destination "
"rules </docs/concepts/traffic-management/#destination-rules>`_."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:275
msgid ""
"Run the following command to create default destination rules for the "
"Bookinfo services:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:278
msgid "If you did **not** enable mutual TLS, execute this command:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:282
msgid ""
"Choose this option if you are new to Istio and are using the ``demo`` "
"`configuration profile </docs/setup/additional-setup/config-profiles/>`_."
" {{< /tip >}}"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:290
msgid "@samples/bookinfo/networking/destination-rule-all.yaml@"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:292
msgid "If you **did** enable mutual TLS, execute this command:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:297
msgid "@samples/bookinfo/networking/destination-rule-all-mtls.yaml@"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:299
msgid "Wait a few seconds for the destination rules to propagate."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:301
msgid "You can display the destination rules with the following command:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:308
msgid "What’s next"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:310
msgid ""
"You can now use this sample to experiment with Istio’s features for "
"traffic routing, fault injection, rate limiting, etc. To proceed, refer "
"to one or more of the `Istio Tasks </docs/tasks>`_, depending on your "
"interest. `Configuring Request Routing </docs/tasks/traffic-management"
"/request-routing/>`_ is a good place to start for beginners."
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:318
msgid "Cleanup"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:320
msgid ""
"When you’re finished experimenting with the Bookinfo sample, uninstall "
"and clean it up using the following instructions:"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:323
msgid "Delete the routing rules and terminate the application pods"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:329
msgid "Confirm shutdown"
msgstr ""

#: ../../source/docs/examples/bookinfo/index.rst:334
msgid ""
"virtual services $ kubectl get destinationrules #– there should be no "
"destination rules $ kubectl get gateway #– there should be no gateway $ "
"kubectl get pods #– the Bookinfo pods should be deleted {{< /text >}}"
msgstr ""

