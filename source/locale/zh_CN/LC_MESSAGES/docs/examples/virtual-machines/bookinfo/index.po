# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:2
msgid "bookinfo"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:4
msgid ""
"This example deploys the Bookinfo application across Kubernetes with one "
"service running on a virtual machine (VM), and illustrates how to control"
" this infrastructure as a single mesh."
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:10
msgid "This example is still under development and only tested"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:11
msgid ""
"on Google Cloud Platform. On IBM Cloud or other platforms where overlay "
"network of Pods is isolated from VM network, VMs cannot initiate any "
"direct communication to Kubernetes Pods even when using Istio. {{< "
"/warning >}}"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:17
msgid "Overview"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:31
msgid "Before you begin"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:33
msgid ""
"Setup Istio by following the instructions in the `Installation guide "
"</docs/setup/getting-started/>`_."
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:36
msgid ""
"Deploy the `Bookinfo </docs/examples/bookinfo/>`_ sample application (in "
"the ``bookinfo`` namespace)."
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:39
msgid ""
"Create a VM named ‘vm-1’ in the same project as the Istio cluster, and "
"`join the mesh </docs/examples/virtual-machines/single-network/>`_."
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:44
msgid "Running MySQL on the VM"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:46
msgid ""
"We will first install MySQL on the VM, and configure it as a backend for "
"the ratings service."
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:49
#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:95
msgid "On the VM:"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:54
msgid ""
"mariadb-server $ sudo mysql # Grant access to root GRANT ALL PRIVILEGES "
"ON *.* TO ‘root’@‘localhost’ IDENTIFIED BY ‘password’ WITH GRANT OPTION; "
"quit;"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:62
msgid ""
"You can find details of configuring MySQL at `Mysql "
"<https://mariadb.com/kb/en/library/download/>`_."
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:65
msgid "On the VM add ratings database to mysql."
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:70
msgid ""
">}}/samples/bookinfo/src/mysql/mysqldb-init.sql \\| mysql -u root "
"-ppassword"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:73
msgid ""
"To make it easy to visually inspect the difference in the output of the "
"Bookinfo application, you can change the ratings that are generated by "
"using the following commands to inspect the ratings:"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:80
msgid ""
"ratings;” +———-+——–+ \\| ReviewID \\| Rating \\| +———-+——–+ \\| 1 \\| 5 "
"\\| \\| 2 \\| 4 \\| +———-+——–+"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:83
msgid "and to change the ratings"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:88
msgid ""
"rating=1 where reviewid=1;select \\* from ratings;” +———-+——–+ \\| "
"ReviewID \\| Rating \\| +———-+——–+ \\| 1 \\| 1 \\| \\| 2 \\| 4 \\| "
"+———-+——–+"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:93
msgid "Find out the IP address of the VM that will be used to add it to the mesh"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:102
msgid "Registering the mysql service with the mesh"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:104
msgid ""
"On a host with access to ```istioctl`` "
"</docs/reference/commands/istioctl>`_ commands, register the VM and mysql"
" db service"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:111
msgid ""
"20:17:54.256699 40419 register.go:43] Registering for service ‘mysqldb’ "
"ip ‘10.150.0.5’, ports list [{3306 mysql}] I1108 20:17:54.256815 40419 "
"register.go:48] 0 labels ([]) and 1 annotations ([alpha.istio.io"
"/kubernetes-serviceaccounts=default]) W1108 20:17:54.573068 40419 "
"register.go:123] Got ‘services “mysqldb” not found’ looking up svc "
"‘mysqldb’ in namespace ‘vm’, attempting to create it W1108 "
"20:17:54.816122 40419 register.go:138] Got ‘endpoints “mysqldb” not "
"found’ looking up endpoints for ‘mysqldb’ in namespace ‘vm’, attempting "
"to create them I1108 20:17:54.886657 40419 register.go:180] No pre "
"existing exact matching ports list found, created new subset "
"{[{10.150.0.5 nil}] [] [{mysql 3306 }]} I1108 20:17:54.959744 40419 "
"register.go:191] Successfully updated mysqldb, now with 1 endpoints"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:124
msgid ""
"Note that the ‘mysqldb’ virtual machine does not need and should not have"
" special Kubernetes privileges."
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:128
msgid "Using the mysql service"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:130
msgid ""
"The ratings service in Bookinfo will use the DB on the machine. To verify"
" that it works, create version 2 of the ratings service that uses the "
"mysql db on the VM. Then specify route rules that force the review "
"service to use the ratings version 2."
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:138
msgid ""
"@samples/bookinfo/platform/kube/bookinfo-ratings-v2-mysql-vm.yaml@ \\| "
"kubectl apply -n bookinfo -f -"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:141
msgid "Create route rules that will force Bookinfo to use the ratings back end:"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:146
msgid "@samples/bookinfo/networking/virtual-service-ratings-mysql-vm.yaml@"
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:148
msgid ""
"You can verify the output of the Bookinfo application is showing 1 star "
"from Reviewer1 and 4 stars from Reviewer2 or change the ratings on your "
"VM and see the results."
msgstr ""

#: ../../source/docs/examples/virtual-machines/bookinfo/index.rst:152
#, python-format
msgid ""
"You can also find some troubleshooting and other information in the "
"`RawVM MySQL "
"<%7B%7B%3C%20github_blob%20%3E%7D%7D/samples/rawvm/README.md>`_ document "
"in the meantime."
msgstr ""

