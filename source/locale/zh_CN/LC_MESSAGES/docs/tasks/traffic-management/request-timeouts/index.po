# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:2
msgid "Request Timeouts"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:4
msgid "This task shows you how to setup request timeouts in Envoy using Istio."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:7
msgid "Before you begin"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:9
msgid ""
"Setup Istio by following the instructions in the `Installation guide "
"</docs/setup/>`_."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:11
msgid ""
"Deploy the `Bookinfo </docs/examples/bookinfo/>`_ sample application "
"including the `default destination rules </docs/examples/bookinfo/#apply-"
"default-destination-rules>`_."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:14
msgid ""
"Initialize the application version routing by running the following "
"command:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:21
msgid "Request timeouts"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:23
msgid ""
"A timeout for http requests can be specified using the *timeout* field of"
" the `route rule </docs/reference/config/networking/virtual-"
"service/#HTTPRoute>`_. By default, the timeout is disabled, but in this "
"task you override the ``reviews`` service timeout to 1 second. To see its"
" effect, however, you also introduce an artificial 2 second delay in "
"calls to the ``ratings`` service."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:30
msgid ""
"Route requests to v2 of the ``reviews`` service, i.e., a version that "
"calls the ``ratings`` service:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:39
#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:72
msgid "route:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:41
msgid "destination: host: reviews subset: v2 EOF"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:43
msgid "Add a 2 second delay to calls to the ``ratings`` service:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:51
msgid "ratings http:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:52
msgid "fault: delay: percent: 100 fixedDelay: 2s route:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:54
msgid "destination: host: ratings subset: v1 EOF"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:56
msgid "Open the Bookinfo URL ``http://$GATEWAY_URL/productpage`` in your browser."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:58
msgid ""
"You should see the Bookinfo application working normally (with ratings "
"stars displayed), but there is a 2 second delay whenever you refresh the "
"page."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:62
msgid ""
"Now add a half second request timeout for calls to the ``reviews`` "
"service:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:71
msgid "reviews http:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:74
msgid "destination: host: reviews subset: v2 timeout: 0.5s EOF"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:76
msgid "Refresh the Bookinfo web page."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:78
msgid ""
"You should now see that it returns in about 1 second, instead of 2, and "
"the reviews are unavailable."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:83
msgid ""
"The reason that the response takes 1 second, even though the timeout is "
"configured at half a second, is because there is a hard-coded retry in "
"the ``productpage`` service, so it calls the timing out ``reviews`` "
"service twice before returning."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:89
msgid "Understanding what happened"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:91
msgid ""
"In this task, you used Istio to set the request timeout for calls to the "
"``reviews`` microservice to half a second. By default the request timeout"
" is disabled. Since the ``reviews`` service subsequently calls the "
"``ratings`` service when handling requests, you used Istio to inject a 2 "
"second delay in calls to ``ratings`` to cause the ``reviews`` service to "
"take longer than half a second to complete and consequently you could see"
" the timeout in action."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:99
msgid ""
"You observed that instead of displaying reviews, the Bookinfo product "
"page (which calls the ``reviews`` service to populate the page) displayed"
" the message: Sorry, product reviews are currently unavailable for this "
"book. This was the result of it receiving the timeout error from the "
"``reviews`` service."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:105
msgid ""
"If you examine the `fault injection task </docs/tasks/traffic-management"
"/fault-injection/>`_, youâ€™ll find out that the ``productpage`` "
"microservice also has its own application-level timeout (3 seconds) for "
"calls to the ``reviews`` microservice. Notice that in this task you used "
"an Istio route rule to set the timeout to half a second. Had you instead "
"set the timeout to something greater than 3 seconds (such as 4 seconds) "
"the timeout would have had no effect since the more restrictive of the "
"two takes precedence. More details can be found `here </docs/concepts"
"/traffic-management/#network-resilience-and-testing>`_."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:115
msgid ""
"One more thing to note about timeouts in Istio is that in addition to "
"overriding them in route rules, as you did in this task, they can also be"
" overridden on a per-request basis if the application adds an ``x-envoy-"
"upstream-rq-timeout-ms`` header on outbound requests. In the header, the "
"timeout is specified in milliseconds instead of seconds."
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:122
msgid "Cleanup"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:124
msgid "Remove the application routing rules:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/request-timeouts/index.rst:130
msgid ""
"If you are not planning to explore any follow-on tasks, see the `Bookinfo"
" cleanup </docs/examples/bookinfo/#cleanup>`_ instructions to shutdown "
"the application."
msgstr ""

