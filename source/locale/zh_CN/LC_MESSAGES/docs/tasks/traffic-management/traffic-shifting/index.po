# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:2
msgid "Traffic Shifting"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:4
msgid ""
"This task shows you how to gradually migrate traffic from one version of "
"a microservice to another. For example, you might migrate traffic from an"
" older version to a new version."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:8
#, python-format
msgid ""
"A common use case is to migrate traffic gradually from one version of a "
"microservice to another. In Istio, you accomplish this goal by "
"configuring a sequence of rules that route a percentage of traffic to one"
" service or another. In this task, you will send 50% of traffic to "
"``reviews:v1`` and 50% to ``reviews:v3``. Then, you will complete the "
"migration by sending 100% of traffic to ``reviews:v3``."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:16
msgid "Before you begin"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:18
msgid ""
"Setup Istio by following the instructions in the `Installation guide "
"</docs/setup/>`_."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:19
msgid "Deploy the `Bookinfo </docs/examples/bookinfo/>`_ sample application."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:20
msgid ""
"Review the `Traffic Management </docs/concepts/traffic-management>`_ "
"concepts doc."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:23
msgid "Apply weight-based routing"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:27
msgid ""
"If you haven’t already applied destination rules, follow the instructions"
" in `Apply Default Destination Rules </docs/examples/bookinfo/#apply-"
"default-destination-rules>`_."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:30
msgid ""
"To get started, run this command to route all traffic to the ``v1`` "
"version of each microservice."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:36
msgid ""
"Open the Bookinfo site in your browser. The URL is "
"``http://$GATEWAY_URL/productpage``, where ``$GATEWAY_URL`` is the "
"External IP address of the ingress, as explained in the `Bookinfo "
"</docs/examples/bookinfo/#determine-the-ingress-ip-and-port>`_ doc."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:42
msgid ""
"Notice that the reviews part of the page displays with no rating stars, "
"no matter how many times you refresh. This is because you configured "
"Istio to route all traffic for the reviews service to the version "
"``reviews:v1`` and this version of the service does not access the star "
"ratings service."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:48
#, python-format
msgid ""
"Transfer 50% of the traffic from ``reviews:v1`` to ``reviews:v3`` with "
"the following command:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:54
msgid "Wait a few seconds for the new rules to propagate."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:56
msgid "Confirm the rule was replaced:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:64
msgid "reviews http:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:65
msgid "route:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:67
msgid "destination: host: reviews subset: v1 weight: 50"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:68
msgid "destination: host: reviews subset: v3 weight: 50"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:70
#, python-format
msgid ""
"Refresh the ``/productpage`` in your browser and you now see *red* "
"colored star ratings approximately 50% of the time. This is because the "
"``v3`` version of ``reviews`` accesses the star ratings service, but the "
"``v1`` version does not."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:77
#, python-format
msgid ""
"With the current Envoy sidecar implementation, you may need to refresh "
"the ``/productpage`` many times –perhaps 15 or more–to see the proper "
"distribution. You can modify the rules to route 90% of the traffic to "
"``v3`` to see red stars more often."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:82
#, python-format
msgid ""
"Assuming you decide that the ``reviews:v3`` microservice is stable, you "
"can route 100% of the traffic to ``reviews:v3`` by applying this virtual "
"service:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:90
msgid ""
"Now when you refresh the ``/productpage`` you will always see book "
"reviews with *red* colored star ratings for each review."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:94
msgid "Understanding what happened"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:96
msgid ""
"In this task you migrated traffic from an old to new version of the "
"``reviews`` service using Istio’s weighted routing feature. Note that "
"this is very different than doing version migration using the deployment "
"features of container orchestration platforms, which use instance scaling"
" to manage the traffic."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:102
msgid ""
"With Istio, you can allow the two versions of the ``reviews`` service to "
"scale up and down independently, without affecting the traffic "
"distribution between them."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:106
msgid ""
"For more information about version routing with autoscaling, check out "
"the blog article `Canary Deployments using Istio "
"</blog/2017/0.1-canary/>`_."
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:110
msgid "Cleanup"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:112
msgid "Remove the application routing rules:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/traffic-shifting/index.rst:118
msgid ""
"If you are not planning to explore any follow-on tasks, refer to the "
"`Bookinfo cleanup </docs/examples/bookinfo/#cleanup>`_ instructions to "
"shutdown the application."
msgstr ""

