# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:2
msgid "Kubernetes Services for Egress Traffic"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:4
msgid ""
"Kubernetes `ExternalName <https://kubernetes.io/docs/concepts/services-"
"networking/service/#externalname>`_ services and Kubernetes services with"
" `Endpoints <https://kubernetes.io/docs/concepts/services-"
"networking/service/#services-without-selectors>`_ let you create a local "
"DNS *alias* to an external service. This DNS alias has the same form as "
"the DNS entries for local services, namely ``<service name>.<namespace "
"name>.svc.cluster.local``. DNS aliases provide *location transparency* "
"for your workloads: the workloads can call local and external services in"
" the same way. If at some point in time you decide to deploy the external"
" service inside your cluster, you can just update its Kubernetes service "
"to reference the local version. The workloads will continue to operate "
"without any change."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:17
msgid ""
"This task shows that these Kubernetes mechanisms for accessing external "
"services continue to work with Istio. The only configuration step you "
"must perform is to use a TLS mode other than Istio’s `mutual TLS "
"</docs/concepts/security/#mutual-tls-authentication>`_. The external "
"services are not part of an Istio service mesh so they cannot perform the"
" mutual TLS of Istio. You must set the TLS mode according to the TLS "
"requirements of the external service and according to the way your "
"workload accesses the external service. If your workload issues plain "
"HTTP requests and the external service requires TLS, you may want to "
"perform TLS origination by Istio. If your workload already uses TLS, the "
"traffic is already encrypted and you can just disable Istio’s mutual TLS."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:38
msgid ""
"While the examples in this task use HTTP protocols, Kubernetes Services "
"for egress traffic work with other protocols as well."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:41
msgid "{{< boilerplate before-you-begin-egress >}}"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:43
msgid "Create a namespace for a source pod without Istio control:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:48
#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:322
msgid ">}}"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:50
#, python-format
msgid ""
"Start the `sleep <%7B%7B%3C%20github_tree%20%3E%7D%7D/samples/sleep>`_ "
"sample in the ``without-istio`` namespace."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:57
#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:315
msgid "without-istio"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:59
msgid ""
"To send requests, create the ``SOURCE_POD_WITHOUT_ISTIO`` environment "
"variable to store the name of the source pod:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:65
msgid "-n without-istio -l app=sleep -o jsonpath={.items..metadata.name})"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:68
msgid ""
"Verify that the Istio sidecar was not injected, that is the pod has one "
"container:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:74
msgid ""
"without-istio NAME READY STATUS RESTARTS AGE sleep-66c8d79ff5-8tqrl 1/1 "
"Running 0 32s"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:78
msgid "Kubernetes ExternalName service to access an external service"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:80
msgid ""
"Create a Kubernetes `ExternalName <https://kubernetes.io/docs/concepts"
"/services-networking/service/#externalname>`_ service for ``httpbin.org``"
" in the default namespace:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:87
msgid ""
"apiVersion: v1 metadata: name: my-httpbin spec: type: ExternalName "
"externalName: httpbin.org ports:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:90
msgid "name: http protocol: TCP port: 80 EOF"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:92
msgid "Observe your service. Note that it does not have a cluster IP."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:97
msgid "EXTERNAL-IP PORT(S) AGE my-httpbin ExternalName httpbin.org 80/TCP 4s"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:100
msgid ""
"Access ``httpbin.org`` via the Kubernetes service’s hostname from the "
"source pod without Istio sidecar. Note that the *curl* command below uses"
" the `Kubernetes DNS format for services "
"<https://v1-13.docs.kubernetes.io/docs/concepts/services-networking/dns-"
"pod-service/#a-records>`_: ``<service "
"name>.<namespace>.svc.cluster.local``."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:109
msgid ""
"without-istio -c sleep – curl my-"
"httpbin.default.svc.cluster.local/headers { “headers”: { “Accept”: “*/*”,"
" “Host”: “my-httpbin.default.svc.cluster.local”, “User-Agent”: "
"“curl/7.55.0” } }"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:114
msgid ""
"In this example, unencrypted HTTP requests are sent to ``httpbin.org``. "
"For the sake of the example only, you disable the TLS mode and allow the "
"unencrypted traffic to the external service. In the real life scenarios, "
"we recommend to perform `Egress TLS origination </docs/tasks/traffic-"
"management/egress/egress-tls-origination/>`_ by Istio."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:124
msgid ""
"networking.istio.io/v1alpha3 kind: DestinationRule metadata: name: my-"
"httpbin spec: host: my-httpbin.default.svc.cluster.local trafficPolicy: "
"tls: mode: DISABLE EOF"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:128
msgid ""
"Access ``httpbin.org`` via the Kubernetes service’s hostname from the "
"source pod with Istio sidecar. Notice the headers added by Istio sidecar,"
" for example ``X-Envoy-Decorator-Operation``. Also note that the ``Host``"
" header equals to your service’s hostname."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:136
msgid ""
"my-httpbin.default.svc.cluster.local/headers { “headers”: { “Accept”: "
"“*/*”, “Content-Length”: “0”, “Host”: “my-"
"httpbin.default.svc.cluster.local”, “User-Agent”: “curl/7.64.0”, "
"“X-B3-Sampled”: “0”, “X-B3-Spanid”: “5795fab599dca0b8”, “X-B3-Traceid”: "
"“5079ad3a4af418915795fab599dca0b8”, “X-Envoy-Decorator-Operation”: \"my-"
"httpbin.default.svc.cluster.local:80/\\*“,”X-Envoy-Peer-Metadata“:”…“,”X"
"-Envoy-Peer-Metadata-Id“:”sidecar\\ :sub:`10.28.1.74`\\ sleep-6bdb595bcb-"
"drr45.default~default.svc.cluster.local\" } }"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:146
msgid "Cleanup of Kubernetes ExternalName service"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:151
msgid "delete service my-httpbin"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:154
msgid "Use a Kubernetes service with endpoints to access an external service"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:156
msgid "Create a Kubernetes service without selector for Wikipedia:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:161
msgid "apiVersion: v1 metadata: name: my-wikipedia spec: ports:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:163
msgid "protocol: TCP port: 443 name: tls EOF"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:165
msgid ""
"Create endpoints for your service. Pick a couple of IPs from the "
"`Wikipedia ranges list "
"<https://www.mediawiki.org/wiki/Wikipedia_Zero/IP_Addresses>`_."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:172
msgid "apiVersion: v1 metadata: name: my-wikipedia subsets:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:174
msgid "addresses:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:176
msgid "ip: 91.198.174.192"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:177
msgid "ip: 198.35.26.96 ports:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:178
msgid "port: 443 name: tls EOF"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:180
msgid ""
"Observe your service. Note that it has a cluster IP which you can use to "
"access ``wikipedia.org``."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:186
msgid "EXTERNAL-IP PORT(S) AGE my-wikipedia ClusterIP 172.21.156.230 443/TCP 21h"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:189
msgid ""
"Send HTTPS requests to ``wikipedia.org`` by your Kubernetes service’s "
"cluster IP from the source pod without Istio sidecar. Use the "
"``--resolve`` option of ``curl`` to access ``wikipedia.org`` by the "
"cluster IP:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:197
msgid ""
":math:`SOURCE_POD_WITHOUT_ISTIO -n without-istio -c sleep -- curl -s "
"--resolve en.wikipedia.org:443:`\\ (kubectl get service my-wikipedia -o "
"jsonpath=‘{.spec.clusterIP}’) https://en.wikipedia.org/wiki/Main_Page \\|"
" grep -o \""
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:205
#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:250
msgid ".\\*"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:211
#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:256
msgid "\""
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:217
#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:262
msgid "Wikipedia, the free encyclopedia"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:225
msgid ""
"In this case, the workload send HTTPS requests (open TLS connection) to "
"the ``wikipedia.org``. The traffic is already encrypted by the workload "
"so you can safely disable Istio’s mutual TLS:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:232
msgid ""
"networking.istio.io/v1alpha3 kind: DestinationRule metadata: name: my-"
"wikipedia spec: host: my-wikipedia.default.svc.cluster.local "
"trafficPolicy: tls: mode: DISABLE EOF"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:236
msgid ""
"Access ``wikipedia.org`` by your Kubernetes service’s cluster IP from the"
" source pod with Istio sidecar:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:242
msgid ""
":math:`SOURCE_POD -c sleep -- curl -s --resolve en.wikipedia.org:443:`\\ "
"(kubectl get service my-wikipedia -o jsonpath=‘{.spec.clusterIP}’) "
"https://en.wikipedia.org/wiki/Main_Page \\| grep -o \""
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:270
msgid ""
"Check that the access is indeed performed by the cluster IP. Notice the "
"sentence ``Connected to en.wikipedia.org   (172.21.156.230)`` in the "
"output of ``curl -v``, it mentions the IP that was printed in the output "
"of your service as the cluster IP."
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:278
msgid ""
":math:`SOURCE_POD -c sleep -- curl -v --resolve en.wikipedia.org:443:`\\ "
"(kubectl get service my-wikipedia -o jsonpath=‘{.spec.clusterIP}’) "
"https://en.wikipedia.org/wiki/Main_Page -o /dev/null"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:282
msgid "Added en.wikipedia.org:443:172.21.156.230 to DNS cache"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:283
msgid "Hostname en.wikipedia.org was found in DNS cache"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:284
msgid "Trying 172.21.156.230…"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:285
msgid "TCP_NODELAY set"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:286
msgid "Connected to en.wikipedia.org (172.21.156.230) port 443 (#0) …"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:289
msgid "Cleanup of Kubernetes service with endpoints"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:294
msgid ""
"kubectl delete endpoints my-wikipedia $ kubectl delete service my-"
"wikipedia"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:298
msgid "Cleanup"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:300
#, python-format
msgid ""
"Shutdown the `sleep <%7B%7B%3C%20github_tree%20%3E%7D%7D/samples/sleep>`_"
" service:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:308
#, python-format
msgid ""
"Shutdown the `sleep <%7B%7B%3C%20github_tree%20%3E%7D%7D/samples/sleep>`_"
" service in the ``without-istio`` namespace:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:317
msgid "Delete ``without-istio`` namespace:"
msgstr ""

#: ../../source/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.rst:324
msgid "Unset the environment variables:"
msgstr ""

