# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:1
msgid ""
"This task shows you how to set up Istio authorization policy that denies "
"HTTP traffic in an Istio mesh. Learn more in our `authorization concept "
"page </docs/concepts/security/#authorization>`_."
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:6
msgid "Before you begin"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:8
msgid "Before tackling this task you must perform the following actions:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:10
msgid ""
"Read the `authorization concept "
"</docs/concepts/security/#authorization>`_."
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:13
msgid ""
"Follow the `Istio installation guide </docs/setup/install/istioctl/>`_ to"
" install Istio."
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:16
msgid "Deploy workloads:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:18
msgid ""
"This task uses two workloads, httpbin and sleep, deployed on one "
"namespace, foo. Both workloads run with an Envoy proxy in front of each. "
"Deploy the example namespace and workloads with the following command:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:26
msgid ""
"<(istioctl kube-inject -f samples/httpbin/httpbin.yaml) -n foo $ kubectl "
"apply -f <(istioctl kube-inject -f samples/sleep/sleep.yaml) -n foo"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:30
msgid "Verify that ``sleep`` talks to ``httpbin`` with the following command:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:36
msgid ""
"-o jsonpath={.items..metadata.name}) -c sleep -n foo – curl "
"http://httpbin.foo:8000/ip -s -o /dev/null -w “%{http_code}:raw-"
"latex:`\\n`” 200"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:42
msgid "If you don’t see the expected output as you follow the"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:43
msgid ""
"task, retry after a few seconds. Caching and propagation overhead can "
"cause some delay."
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:47
msgid "Explicitly deny a request"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:49
msgid ""
"The following command creates the ``deny-method-get`` authorization "
"policy for the ``httpbin`` workload in the ``foo`` namespace. The policy "
"sets the ``action`` to ``DENY`` to deny requests that satisfy the "
"conditions set in the ``rules`` section. This type of policy is better "
"known as deny policy. In this case, the policy denies requests if their "
"method is ``GET``."
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:59
#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:94
msgid ""
"security.istio.io/v1beta1 kind: AuthorizationPolicy metadata: name: deny-"
"method-get namespace: foo spec: selector: matchLabels: app: httpbin "
"action: DENY rules:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:63
#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:98
#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:135
msgid "to:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:65
msgid "operation: methods: [“GET”] EOF"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:67
msgid "Verify that ``GET`` requests are denied:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:72
msgid ""
"foo -o jsonpath={.items..metadata.name}) -c sleep -n foo – curl "
"“http://httpbin.foo:8000/get” -X GET -s -o /dev/null -w “%{http_code"
"}:raw-latex:`\\n`” 403"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:76
msgid "Verify that ``POST`` requests are allowed:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:81
msgid ""
"foo -o jsonpath={.items..metadata.name}) -c sleep -n foo – curl "
"“http://httpbin.foo:8000/post” -X POST -s -o /dev/null -w “%{http_code"
"}:raw-latex:`\\n`” 200"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:85
msgid ""
"Update the ``deny-method-get`` authorization policy to deny ``GET`` "
"requests only if the value of the HTTP header ``x-token`` value is not "
"``admin``. The following example policy sets the value of the "
"``notValues`` field to ``[\"admin\"]`` to deny requests with a header "
"value that is not ``admin``:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:100
msgid "operation: methods: [“GET”] when:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:101
msgid "key: request.headers[x-token] notValues: [“admin”] EOF"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:103
msgid ""
"Verify that ``GET`` requests with the HTTP header ``x-token: admin`` are "
"allowed:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:109
msgid ""
"foo -o jsonpath={.items..metadata.name}) -c sleep -n foo – curl "
"“http://httpbin.foo:8000/get” -X GET -H “x-token: admin” -s -o /dev/null "
"-w “%{http_code}:raw-latex:`\\n`” 200"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:113
msgid ""
"Verify that GET requests with the HTTP header ``x-token: guest`` are "
"denied:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:119
msgid ""
"foo -o jsonpath={.items..metadata.name}) -c sleep -n foo – curl "
"“http://httpbin.foo:8000/get” -X GET -H “x-token: guest” -s -o /dev/null "
"-w “%{http_code}:raw-latex:`\\n`” 403"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:123
msgid ""
"The following command creates the ``allow-path-ip`` authorization policy "
"to allow requests at the ``/ip`` path to the ``httpbin`` workload. This "
"authorization policy sets the ``action`` field to ``ALLOW``. This type of"
" policy is better known as an allow policy."
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:131
msgid ""
"security.istio.io/v1beta1 kind: AuthorizationPolicy metadata: name: "
"allow-path-ip namespace: foo spec: selector: matchLabels: app: httpbin "
"action: ALLOW rules:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:137
msgid "operation: paths: [“/ip”] EOF"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:139
msgid ""
"Verify that ``GET`` requests with the HTTP header ``x-token: guest`` at "
"path ``/ip`` are denied by the ``deny-method-get`` policy. Deny policies "
"takes precedence over the allow policies:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:146
msgid ""
"foo -o jsonpath={.items..metadata.name}) -c sleep -n foo – curl "
"“http://httpbin.foo:8000/ip” -X GET -H “x-token: guest” -s -o /dev/null "
"-w “%{http_code}:raw-latex:`\\n`” 403"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:150
msgid ""
"Verify that ``GET`` requests with the HTTP header ``x-token: admin`` at "
"path ``/ip`` are allowed by the ``allow-path-ip`` policy:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:156
msgid ""
"foo -o jsonpath={.items..metadata.name}) -c sleep -n foo – curl "
"“http://httpbin.foo:8000/ip” -X GET -H “x-token: admin” -s -o /dev/null "
"-w “%{http_code}:raw-latex:`\\n`” 200"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:160
msgid ""
"Verify that ``GET`` requests with the HTTP header ``x-token: admin`` at "
"path ``/get`` are denied because they don’t match the ``allow-path-ip`` "
"policy:"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:167
msgid ""
"foo -o jsonpath={.items..metadata.name}) -c sleep -n foo – curl "
"“http://httpbin.foo:8000/get” -X GET -H “x-token: admin” -s -o /dev/null "
"-w “%{http_code}:raw-latex:`\\n`” 403"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:172
msgid "Clean up"
msgstr ""

#: ../../source/docs/tasks/security/authorization/authz-deny/index.rst:174
msgid "Remove the namespace foo from your configuration:"
msgstr ""

