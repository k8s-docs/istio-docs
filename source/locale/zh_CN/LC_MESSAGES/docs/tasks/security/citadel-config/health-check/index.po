# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:2
msgid "health-check"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:4
msgid ""
"You can enable Citadel’s health checking feature to detect the failures "
"of the Citadel CSR (Certificate Signing Request) service. When a failure "
"is detected, Kubelet automatically restarts the Citadel container."
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:8
msgid ""
"When the health checking feature is enabled, the **prober client** module"
" in Citadel periodically checks the health status of Citadel’s CSR gRPC "
"server. It does this by sending CSRs to the gRPC server and verifies the "
"responses. If Citadel is healthy, the *prober client* updates the "
"*modification time* of the *health status file*. Otherwise, it does "
"nothing. Citadel relies on a `Kubernetes liveness and readiness probe "
"<https://kubernetes.io/docs/tasks/configure-pod-container/configure-"
"liveness-readiness-probes/>`_ with command line to check the "
"*modification time* of the *health status file* on the pod. If the file "
"is not updated for a period, Kubelet will restart the Citadel container."
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:21
msgid "Since Citadel health checking currently only monitors the"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:22
msgid ""
"health status of CSR service API, this feature is not needed if the "
"production setup is not using `SDS </docs/tasks/security/citadel-config"
"/auth-sds/>`_ or `adding virtual machines </docs/examples/virtual-"
"machines/>`_."
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:28
msgid "Before you begin"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:30
msgid ""
"Follow the `Istio installation guide </docs/setup/install/istioctl/>`_ to"
" install Istio with mutual TLS enabled."
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:34
msgid "Deploying Citadel with health checking"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:36
msgid "To enable health checking, redeploy Citadel:"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:41
msgid ""
"values.security.citadelHealthCheck=true > citadel-health-check.yaml $ "
"kubectl apply -f citadel-health-check.yaml"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:45
msgid "Verify that health checking works"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:47
msgid ""
"Citadel will log the health checking results. Run the following in "
"command line:"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:53
msgid ""
"``kubectl get po -n istio-system | grep istio-citadel | awk '{print "
"$1}'`` -n istio-system \\| grep “CSR signing service”"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:56
msgid "You will see the output similar to:"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:58
msgid ""
"{{< text plain >}} … CSR signing service is healthy (logged every 100 "
"times)."
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:61
msgid ""
"The log above indicates the periodic health checking is working. The "
"default health checking interval is 15 seconds and is logged once every "
"100 checks."
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:66
msgid "(Optional) Configuring the health checking"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:68
msgid ""
"This section talks about how to modify the health checking configuration."
" Open the file ``citadel-health-check.yaml``, and locate the following "
"lines."
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:72
msgid ""
"{{< text plain >}} … - –liveness-probe-path=/tmp/ca.liveness # path to "
"the liveness health checking status file - –liveness-probe-interval=60s #"
" interval for health checking file update - –probe-check-interval=15s # "
"interval for health status check livenessProbe: exec: command: - "
"/usr/local/bin/istio_ca - probe - –probe-path=/tmp/ca.liveness # path to "
"the liveness health checking status file - –interval=125s # the maximum "
"time gap allowed between the file mtime and the current sys clock. "
"initialDelaySeconds: 60 periodSeconds: 60 …"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:81
msgid ""
"The paths to the health status files are ``liveness-probe-path`` and "
"``probe-path``. You should update the paths in Citadel and in the "
"``livenessProbe`` at the same time. If Citadel is healthy, the value of "
"the ``liveness-probe-interval`` entry determines the interval used to "
"update the health status file. The Citadel health checking controller "
"uses the value of the ``probe-check-interval`` entry to determine the "
"interval to call the Citadel CSR service. The ``interval`` is the maximum"
" time elapsed since the last update of the health status file, for the "
"prober to consider Citadel as healthy. The values in the "
"``initialDelaySeconds`` and ``periodSeconds``\\ entries determine the "
"initial delay and the interval between each activation of the "
"``livenessProbe``."
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:94
msgid ""
"Prolonging ``probe-check-interval`` will reduce the health checking "
"overhead, but there will be a greater lagging for the prober to get "
"notified on the unhealthy status. To avoid the prober restarting Citadel "
"due to temporary unavailability, the ``interval`` on the prober can be "
"configured to be more than ``N`` times of the ``liveness-probe-"
"interval``. This will allow the prober to tolerate ``N-1`` continuously "
"failed health checks."
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:103
msgid "Cleanup"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:105
msgid "To disable health checking on Citadel:"
msgstr ""

#: ../../source/docs/tasks/security/citadel-config/health-check/index.rst:110
msgid "values.security.citadelHealthCheck=false"
msgstr ""

