# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BandCamp
# This file is distributed under the same license as the istio-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: istio-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-22 10:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:2
msgid "collecting-metrics"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:4
msgid ""
"This task shows how to configure Istio to automatically gather telemetry "
"for services in a mesh. At the end of this task, a new metric will be "
"enabled for calls to services within your mesh."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:8
msgid ""
"The `Bookinfo </docs/examples/bookinfo/>`_ sample application is used as "
"the example application throughout this task."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:12
msgid "Before you begin"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:14
msgid ""
"`Install Istio </docs/setup>`_ in your cluster and deploy an application."
" This task assumes that Mixer is setup in a default configuration "
"(``--configDefaultNamespace=istio-system``). If you use a different "
"value, update the configuration and commands in this task to match the "
"value."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:21
msgid "Collecting new metrics"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:23
msgid ""
"Apply a YAML file with configuration for the new metric that Istio will "
"generate and collect automatically."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:29
#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:162
msgid "@samples/bookinfo/telemetry/metrics.yaml@"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:33
msgid ""
"If you use Istio 1.1.2 or prior, please use the following configuration "
"instead:"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:39
#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:169
msgid "@samples/bookinfo/telemetry/metrics-crd.yaml@"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:43
msgid "Send traffic to the sample application."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:45
msgid ""
"For the Bookinfo sample, visit ``http://$GATEWAY_URL/productpage`` in "
"your web browser or issue the following command:"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:51
msgid ">}}"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:53
msgid "Verify that the new metric values are being generated and collected."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:55
msgid ""
"In a Kubernetes environment, setup port-forwarding for Prometheus by "
"executing the following command:"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:61
msgid ""
"istio-system get pod -l app=prometheus -o "
"jsonpath=‘{.items[0].metadata.name}’) 9090:9090 &"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:64
msgid ""
"View values for the new metric in the Prometheus browser window. Select "
"**Graph**. Enter the ``istio_double_request_count`` metric and select "
"**Execute**. The table displayed in the **Console** tab includes entries "
"similar to:"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:69
msgid ""
"{{< text plain >}} "
"istio_double_request_count{destination=“details-v1”,instance=“172.17.0.12:42422”,job"
"=“istio-mesh”,message=“twice the "
"fun!”,reporter=“client”,source=“productpage-v1”} 8 "
"istio_double_request_count{destination=“details-v1”,instance=“172.17.0.12:42422”,job"
"=“istio-mesh”,message=“twice the "
"fun!”,reporter=“server”,source=“productpage-v1”} 8 "
"istio_double_request_count{destination=“istio-"
"policy”,instance=“172.17.0.12:42422”,job=“istio-mesh”,message=“twice the "
"fun!”,reporter=“server”,source=“details-v1”} 4 "
"istio_double_request_count{destination=“istio-"
"policy”,instance=“172.17.0.12:42422”,job=“istio-mesh”,message=“twice the "
"fun!”,reporter=“server”,source=“istio-ingressgateway”} 4"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:79
msgid ""
"For more on querying Prometheus for metric values, see the `Querying "
"Istio Metrics </docs/tasks/observability/metrics/querying-metrics/>`_ "
"task."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:85
msgid "Understanding the metrics configuration"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:87
msgid ""
"In this task, you added Istio configuration that instructed Mixer to "
"automatically generate and report a new metric for all traffic within the"
" mesh."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:91
msgid "The added configuration controlled three pieces of Mixer functionality:"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:93
msgid ""
"Generation of *instances* (in this example, metric values) from Istio "
"attributes"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:96
msgid ""
"Creation of *handlers* (configured Mixer adapters) capable of processing "
"generated *instances*"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:99
msgid "Dispatch of *instances* to *handlers* according to a set of *rules*"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:101
msgid ""
"The metrics configuration directs Mixer to send metric values to "
"Prometheus. It uses three stanzas (or blocks) of configuration: "
"*instance* configuration, *handler* configuration, and *rule* "
"configuration."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:106
msgid ""
"The ``kind: instance`` stanza of configuration defines a schema for "
"generated metric values (or *instances*) for a new metric named "
"``doublerequestcount``. This instance configuration tells Mixer *how* to "
"generate metric values for any given request, based on the attributes "
"reported by Envoy (and generated by Mixer itself)."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:112
msgid ""
"For each instance of ``doublerequestcount``, the configuration directs "
"Mixer to supply a value of ``2`` for the instance. Because Istio "
"generates an instance for each request, this means that this metric "
"records a value equal to twice the total number of requests received."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:117
msgid ""
"A set of ``dimensions`` are specified for each ``doublerequestcount`` "
"instance. Dimensions provide a way to slice, aggregate, and analyze "
"metric data according to different needs and directions of inquiry. For "
"instance, it may be desirable to only consider requests for a certain "
"destination service when troubleshooting application behavior."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:123
msgid ""
"The configuration instructs Mixer to populate values for these dimensions"
" based on attribute values and literal values. For instance, for the "
"``source`` dimension, the new configuration requests that the value be "
"taken from the ``source.workload.name`` attribute. If that attribute "
"value is not populated, the rule instructs Mixer to use a default value "
"of ``\"unknown\"``. For the ``message`` dimension, a literal value of "
"``\"twice the fun!\"`` will be used for all instances."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:131
msgid ""
"The ``kind: handler`` stanza of configuration defines a *handler* named "
"``doublehandler``. The handler ``spec`` configures how the Prometheus "
"adapter code translates received metric instances into Prometheus-"
"formatted values that can be processed by a Prometheus backend. This "
"configuration specified a new Prometheus metric named "
"``double_request_count``. The Prometheus adapter prepends the ``istio_`` "
"namespace to all metric names, therefore this metric will show up in "
"Prometheus as ``istio_double_request_count``. The metric has three labels"
" matching the dimensions configured for ``doublerequestcount`` instances."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:142
msgid ""
"Mixer instances are matched to Prometheus metrics via the "
"``instance_name`` parameter. The ``instance_name`` values must be the "
"fully-qualified name for Mixer instances (example: "
"``doublerequestcount.instance.istio-system``)."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:147
msgid ""
"The ``kind: rule`` stanza of configuration defines a new *rule* named "
"``doubleprom``. The rule directs Mixer to send all ``doublerequestcount``"
" instances to the ``doublehandler`` handler. Because there is no "
"``match`` clause in the rule, and because the rule is in the configured "
"default configuration namespace (``istio-system``), the rule is executed "
"for all requests in the mesh."
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:155
msgid "Cleanup"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:157
msgid "Remove the new metrics configuration:"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:164
msgid "If you are using Istio 1.1.2 or prior:"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:171
msgid "Remove any ``kubectl port-forward`` processes that may still be running:"
msgstr ""

#: ../../source/docs/tasks/observability/mixer/metrics/collecting-metrics/index.rst:178
msgid ""
"If you are not planning to explore any follow-on tasks, refer to the "
"`Bookinfo cleanup </docs/examples/bookinfo/#cleanup>`_ instructions to "
"shutdown the application."
msgstr ""

